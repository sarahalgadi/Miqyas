<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Course Report: <%= courseCode %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script> 

    <link rel="stylesheet" href="../public/stylesheets/courseReport.css">
</head>

<body>
    <!--This is different from editingCourseReport aka courseReport.ejs in action plans & recommendations and no form or button.-->

    <hr>
    <div class="row container-fluid" style="font-family:Arial, Helvetica, sans-serif">
        <div class="col-md-8">
            <h2 style="font-weight: 600; margin: 1rem; padding: 1rem;"><%= courseCode %>: <%= courseName %></h2>
            <h2 style="font-weight: 600; margin: 1rem; padding: 1rem;">CLO Assessment Course Report</h2>
            <h2 style="font-weight: 400; margin: 1rem; padding: 1rem;">Direct Assessment Results</h2>
        </div>
        <div class="col-md-4">
            
            <h2 style="font-weight: 600; margin-top: 1rem; margin-left: 20%; padding: 1rem; font-size: x-large;">Term:
               <%= term %></h2>
            <h3 style="font-weight:400; margin: 1rem; padding: 1rem;">by user (sorry for the style)</h3>
        </div>
    </div>


    <div class="container">
        <table class="table table-bordered">
          <thead>
            <tr>
              <th>CLO Number</th>
              <th>CLO Description</th>
              <th>BE</th>
              <th>DE</th>
              <th>ME</th>
              <th>AE</th>
              <th>Results</th>
            </tr>
          </thead>
          <tbody>
            <% for (let i = 0; i < CLOnumbers.length; i++) { %>
              <tr>
                <td><%= CLOnumbers[i] %></td>
                <td><%= CLOstatements[i] %></td>
                <!-- PER CATEGORY INFO -->
                <% for (let category of [0, 1, 2, 3]) { %>
                  <% const categoryData = categoryCounts.find(data => parseInt(data.CLONumber) === parseInt(CLOnumbers[i]) && parseInt(data.category) === parseInt(category)); %>
                  <td><%= categoryData ? categoryData.studentCount : 0 %></td>
                <% } %>
                <!-- Display results for each CLO -->
                <td><%= resultsPerCLO[CLOnumbers[i]] ? resultsPerCLO[CLOnumbers[i]].results.toFixed(2) : 0 %></td>
              </tr>
            <% } %>
          </tbody>
        </table>
      </div>
      
      
      <div class="dropdown">
        <button type="button" class="btn custom-button dropdown-toggle" style="margin-left: 0;" data-bs-toggle="dropdown">
          Filter
        </button>
        <ul class="dropdown-menu">
            <li><a class="dropdown-item" href="/view-course-report/<%= courseCode %>/<%= term %>/All">All</a></li>
            <% departments.forEach(department => { %>
              <li><a class="dropdown-item" href="/view-course-report/<%= courseCode %>/<%= term %>/<%= department %>"><%= department %></a></li>
            <% }); %>
          </ul>
          
      </div>
    </div>
    <div class="row container-fluid" style="font-family:Arial, Helvetica, sans-serif">
        <h2 style="font-weight: 400; margin: 1rem; padding: 1rem;">Indirect Assessment Results</h2>
    </div>
    <div class="container" id="result">
        <table class="table table-bordered">
          <thead>
            <tr>
              <th>CLO Number</th>
              <th>Not Satisfied</th>
              <th>Barely Satisfied</th>
              <th>Satisfied</th>
              <th>Adequately Satisfied</th>
              <th>Fully Satisfied</th>
              <th>Result</th>
            </tr>
          </thead>
          <tbody>
            <% indirectSums.forEach(sum => { %>
              <tr>
                <td>CLO <%= sum.CLONumber %></td>
                <td><%= sum.totalNotSatisfied %></td>
                <td><%= sum.totalBarelySatisfied %></td>
                <td><%= sum.totalSatisfied %></td>
                <td><%= sum.totalAdequatelySatisfied %></td>
                <td><%= sum.totalFullySatisfied %></td>
                <td>
                    <% if (totalIndirectPerCLO[sum.CLONumber] !== undefined) { %>
                      <%= totalIndirectPerCLO[sum.CLONumber] %>
                    <% } else { %>
                      N/A
                    <% } %>
                  </td>
              </tr>
            <% }); %>
          </tbody>
        </table>
      </div>

    <div class="row container-fluid" style="font-family:Arial, Helvetica, sans-serif">
        <h2 style="font-weight: 400; margin: 1rem; padding: 1rem;">Overall Assessment Results</h2>
    </div>
    <div class="container" id="result">
        
        <canvas id="assessmentChart" width="400" height="130"></canvas>
    </div>
    <div class="row container-fluid" style="font-family:Arial, Helvetica, sans-serif">
        <h2 style="font-weight: 400; margin: 1rem; padding: 1rem;">Selected Action Plan(s):</h2>
    </div>
    <div class="container" id="result">
    <% if (actionPlans && actionPlans.length > 0) { %>
      
            <!-- Loop over unique sections and display action plans for each section -->
            <% const uniqueSections = [...new Set(actionPlans.map(entry => entry.sectionNumber))]; %>
            <% uniqueSections.forEach(sectionNumber => { %>
              <h3>Section <%= sectionNumber %></h3>
              <table class="table table-bordered">
                <thead>
                  <tr>
                    <th rowspan="2">CLO Number</th>
                    <th colspan="6">Action Plan & Recommendation</th>
                  </tr>
                  <tr>
                    <th>Action</th>
                    <th>Responsible</th>
                    <th>Start Time</th>
                    <th>End Time</th>
                    <th>Resources</th>
                  </tr>
                </thead>
                <tbody>
                  <% actionPlans.filter(e => e.sectionNumber === sectionNumber).forEach(action => { %>
                    <tr>
                      <td><%= action.CLONumber %></td>
                      <td><%= action.statement %></td>
                      <td><%= action.responsibility %></td>
                      <td><%= action.startDate %></td>
                      <td><%= action.endDate %></td>
                      <td><%= action.resources %></td>
                    
                    </tr>
                  <% }); %>
                </tbody>
              </table>
            <% }); %>
          
          <% } else { %>
            <p>No action plans were selected.</p>
            <% } %>
        </div>
          <div class="row container-fluid" style="font-family:Arial, Helvetica, sans-serif">
            <h2 style="font-weight: 400; margin: 1rem; padding: 1rem;"> Recommendation for Course:</h2>
          </div>
    
        <div class="container">
            <p><%= recommendation || '' %></p>
        </div>
   
</body>

<script>
    // histogram script
    // i had to split them into arrays in the server-side.. because javascript could not understand ejs objects.


    const clonumbers = "<%= clohisto %>".split(',').map(Number);
    const indirectres = "<%= indirecthisto %>".split(',').map(Number);
    const directres = "<%= directhisto %>".split(',').map(Number);

    const cloData = [];
    for(let i = 0; i< clonumbers.length; i++){
       const obj = 
       {clo: "CLO " + clonumbers[i],
         directResult: directres[i],
         indirectResult: indirectres[i]};
        cloData.push(obj);
    }

    const cloLabels = cloData.map(item => item.clo);
    const directResults = cloData.map(item => item.directResult);
    const indirectResults = cloData.map(item => item.indirectResult);

    const ctx = document.getElementById('assessmentChart').getContext('2d');
    const chart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: cloLabels,
            datasets: [
                {
                    label: 'Direct Results',
                    backgroundColor: 'rgba(21, 65, 110, 0.9)',
                    borderColor: 'rgba(96, 137, 179)',
                    borderWidth: 1,
                    data: directResults,
                },
                {
                    label: 'Indirect Results',
                    backgroundColor: 'rgba(174, 183, 191, 0.8)',
                    borderColor: 'rgba(225, 230, 235)',
                    borderWidth: 1,
                    data: indirectResults,
                },
            ],
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true,
                },
            },
        },
    });
;
</script>


</html>
